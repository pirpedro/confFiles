#!/bin/bash

#check if
MY_CONFIG_DIR=${MY_CONFIG_PATH:=/etc/my-config}
DEBUG_MODE=0;

source $MY_CONFIG_DIR/functions.sh

while getopts "dv" OPTION; do
    case "$OPTION" in
        d) DEBUG_MODE=1
            set -x
            ;;
        v)  __verbosity on
            ;;

        # Unknown option. No need for an error, getopts informs
        # the user itself.
        \?) exit 1;;
    esac
done

__abort


FILES=;
#keeps the action information (install|remove)
ACTION="$1";
TARGET=$2;
#directory where the script will search for config files to load
PACKAGE_LOCATION="$MY_CONFIG_DIR/packages";
#extension of the config files
EXT=".sh"

export MY_CONF_FILES=/Users/pedro/Dropbox/Env

#this function load files, give execution
#permission for each one and execute the right action on it.
__load(){
	if [ ! -d $PACKAGE_LOCATION ]; then
                echo "Packages directory does not exist.";
                exit 64;
        fi
        if [ -z $TARGET ] || [ "$TARGET" == "all" ]; then
                FILES=($( ls $PACKAGE_LOCATION/*$EXT));
        else
                if [ ! -e $PACKAGE_LOCATION/*$TARGET$EXT ]; then
                        echo "Configuration file for $TARGET not found";
                        exit 0;
                fi
                FILES=($( ls $PACKAGE_LOCATION/*$TARGET$EXT));
        fi

	for file in "${FILES[@]}"
	do
		if [ -e $file ]; then

			if [ ! -x $file ]; then
				sudo chmod +x $file
			fi
                        echo "$ACTION $(echo ${file%$EXT} | sed 's/^.*-//'): Action Started..."
			source $BASH_PROFILE
			$file $ACTION $MYCONF_PATH
			echo "$ACTION $(echo ${file%$EXT} | sed 's/^.*-//'): Action Finished."
		fi
	done
}

#check if the script has super user permissions
#if [ ! "$(id -u)" = "0" ]; then
#        echo "You need super user privileges to run some of the scripts."
#	exit 1
#fi

if [ ! -e $BASH_PROFILE ]; then
	touch $BASH_PROFILE
fi

_format_number(){
	if [ $1 -lt 10 ]; then
		echo 0$1
	else
		echo $1
	fi
}

case "$1" in
install)
	__load;
;;
remove)
        __load;
;;
position)
	if [ -z $2 ] && [ -z $3 ]; then
		echo "You need to pass the script and the position to realocate"
		exit 0
	fi
	cd $PACKAGE_LOCATION
	GLOBIGNORE="*-$2$EXT"
	FILES=($( ls *$EXT));
        GLOBIGNORE=""
	FILE=""
	i=0
	for FILE in "${FILES[@]}"
	do
		if [ $i = $3  ]; then
			((i++))
		fi
		mv $FILE $(_format_number $i)-$(echo ${FILE%$EXT} | sed 's/^.*-//')$EXT

		((i++))
	done
	FILE=$( ls *-$2$EXT)
	mv $FILE $(_format_number $3)-$(echo ${FILE%$EXT} | sed 's/^.*-//')$EXT
;;
list)
	echo "Available configuration files:"
	for file in $PACKAGE_LOCATION/*$EXT
	do
		echo $(echo ${file%$EXT} | sed 's/^.*-//')
	done
;;
*)
	echo "Usage: '$0' {install|remove|position} {all | <specific script>}"
        #exit 64
;;
esac
