#!/bin/bash

#check if exists environment variable to manally change resources location
MY_CONFIG_DIR=${MY_CONFIG_PATH:=/etc/my-config}
#path to subfolder with extra functions
MY_CONFIG_EXT="$MY_CONFIG_DIR/ext"
#directory where the script will search for config files to load
PACKAGE_LOCATION="$MY_CONFIG_DIR/packages-enabled";
#extension of the config files
EXT=".sh"
CONFIGURATION_FILE="$MY_CONFIG_DIR/my-config.conf"
DEBUG_MODE=0;

source $MY_CONFIG_EXT/functions.sh

FILES=;
#keeps the action information (install|remove)
ACTION="$1"; shift; #shift to make getopts works
TARGET=$1; shift; #shift to make getopts works

while getopts "dv" OPTION; do
    case "$OPTION" in
        d) DEBUG_MODE=1
            set -x
            ;;
        v)  __verbosity on
            ;;

        # Unknown option. No need for an error, getopts informs
        # the user itself.
        \?) exit 1;;
    esac
done

__load_config_file $CONFIGURATION_FILE

#this function load files, give execution
#permission for each one and execute the right action on it.
__load(){
	if [ ! -d $PACKAGE_LOCATION ]; then
                __log "Packages directory does not exist.";
                exit 64;
        fi
        if [ -z $TARGET ] || [ "$TARGET" == "all" ]; then
                FILES=($( ls $PACKAGE_LOCATION/*$EXT));
        else
                if [ ! -e $PACKAGE_LOCATION/*$TARGET$EXT ]; then
                        __log "Configuration file for $TARGET not found";
                        exit 0;
                fi
                FILES=($( ls $PACKAGE_LOCATION/*$TARGET$EXT));
        fi

	for file in "${FILES[@]}"
	do
		if [ -e $file ]; then

			if [ ! -x $file ]; then
				sudo chmod +x $file
			fi
                        __log "$ACTION $(__format_script_name $file): Action Started..."
			source $PROFILE
			$file $ACTION $MY_CONFIG_DIR $MY_CONFIG_EXT
			__log "$ACTION $(__format_script_name $file): Action Finished."
		fi
	done
}

#check if the script has super user permissions
#if [ ! "$(id -u)" = "0" ]; then
#        __log "You need super user privileges to run some of the scripts."
#	exit 1
#fi

if [ ! -e $PROFILE ]; then
	touch $PROFILE
fi

_format_number(){
	if [ $1 -lt 10 ]; then
		echo 0$1
	else
		echo $1
	fi
}

case "$ACTION" in
install)
        __load;
;;
remove)
        __load;
;;
position)
            if [ -z $2 ] && [ -z $3 ]; then
                __log "You need to pass the script and the position to realocate"
	   exit 0
            fi
            cd $PACKAGE_LOCATION
            GLOBIGNORE="*-$2$EXT"
            FILES=($( ls *$EXT));
            GLOBIGNORE=""
            FILE=""
            i=0
            for FILE in "${FILES[@]}"
            do
		if [ $i = $3  ]; then
			((i++))
		fi
		mv $FILE $(_format_number $i)-$(__format_script_name $FILE)$EXT

		((i++))
	done
	FILE=$( ls *-$2$EXT)
	mv $FILE $(_format_number $3)-$(__format_script_name $FILE)$EXT
;;
list)
	echo "Available configuration files:"
	for file in $PACKAGE_LOCATION/*$EXT
	do
		echo $(__format_script_name $file)
	done
;;
test)

;;
*)
	echo "Usage: ${0##*/} {install|remove|position|list} {all | <specific script>}"
        #exit 64
;;
esac
