#!/usr/bin/env bash

printf -v USAGE "%s" "[<recipe_name>]"
printf -v LONG_USAGE "%s" "Include a recipe and its resources in the list of enabled recipes to be installed.

  options
      -c        check if recipe is enabled rather than efectively enable it.

     args
      [<recipe_name>] a recipe name."

EXTENSION=$(my config --default-extension)



function __is_enabled { [ -f "$PACKAGE_LOCATION/$1$EXTENSION" ]; }

function __enable {
  local recipe="$1"
  if ! __is_enabled "$recipe" && test -f "$PACKAGES_AVAILABLE/$recipe$EXTENSION"; then
    ln -sf "$PACKAGES_AVAILABLE/$recipe$EXTENSION" $PACKAGE_LOCATION/
    if [ -d "$PACKAGES_AVAILABLE/resource/$recipe" ]; then
      [ -d "$PACKAGE_EXTERNAL" ] || mkdir -p "$PACKAGE_EXTERNAL"
      [ -e "$PACKAGE_EXTERNAL/$recipe" ] || ln -sf "$PACKAGES_AVAILABLE/resource/$recipe" "$PACKAGE_EXTERNAL/$recipe"
    fi
  else
      die "$recipe is already enabled or not exist."
  fi
}

__config_enable(){
  for arg do
    shift
    case "$arg" in
      -c | --check ) set_flag check_enable ;;
      *) set -- "$@" "$arg"                 ;;
    esac
  done

  if empty "$1"; then
     die "You need to pass a recipe name."
  fi

  if flag check_enable; then
    __is_enabled "$1"
  else
    __enable "$1"
  fi
}
